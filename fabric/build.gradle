plugins {
	id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
	shadowCommon
}

loom {
	accessWidener = file("src/main/resources/antiqueatlas.accesswidener")
}

architectury {
	platformSetupLoomIde()
	fabric()
}

dependencies {
	modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
	modApi "me.shedaniel:architectury-fabric:${rootProject.architectury_version}"

	modImplementation "io.github.prospector:modmenu:${rootProject.mod_menu_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	implementation(project(path: ":common")) {
		transitive = false
	}
	developmentFabric(project(path: ":common")) {
		transitive = false
	}
	shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
		transitive = false
	}
}

processResources {
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	inputs.property "version", project.version
}

shadowJar {
	configurations = [project.configurations.shadowCommon]
	classifier "dev-shadow"
}

jar {
	classifier "dev"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	classifier "fabric"
}

java {
	withSourcesJar()
}

sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	exclude "antiqueatlas.accesswidener"
}

publishing {
	publications {
		mavenFabric(MavenPublication) {
			artifactId = rootProject.archives_base_name + "-" + project.name
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				classifier null
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
	}
}
