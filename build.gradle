buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://dist.creeper.host/Sponge/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, modId+".refmap.json"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
println('Mod Name: ' + archivesBaseName + ', Mod Version: ' + version + ', Minecraft Version: ' + modMinecraftVersion + ', Forge Version: ' + modForgeVersion)

repositories {
	maven {
		url = "http://server.bbkr.space:8081/artifactory/libs-release"
	}
	maven {
		url = "https://maven.modmuss50.me/"
	}
	maven {
		url = uri("https://jitpack.io")
	}
	
	maven {  url = "https://repo.spongepowered.org/maven" } // mixin
}

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion
    //makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run/client')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			arg "-mixin.config="+modId+".mixins.json"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
			
			args '--username', 'CodeHexIO', '--uuid', 'c5751ce1d50e4d47ca120e1ea1c75542'

            mods {
                modId {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			arg "-mixin.config="+modId+".mixins.json"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modId {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
	minecraft 'net.minecraftforge:forge:' + modMinecraftVersion + '-' + modForgeVersion
	compile 'org.spongepowered:mixin:0.8'
	compile fileTree(include: ['*.jar'], dir: 'libs')
}
// Process resources on build
processResources {
	// This will ensure that this task is redone when the versions change.
	inputs.property 'version', project.version
	// Replace stuff in mods.toml, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'
		// Replace version
		expand 'version': project.version
	}
	// Copy everything else except the mods.toml
	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml'
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
    manifest {
        attributes([
            // Existing properties here
            "MixinConfigs": modId+".mixins.json"
        ])
    }
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				//builtBy remapJar
			}
			artifact(sourcesJar) {
				//builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}